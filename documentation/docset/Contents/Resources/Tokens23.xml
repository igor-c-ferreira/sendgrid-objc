<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/UIButton+AFNetworking.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/UIButton(AFNetworking)</TokenIdentifier>
			<Abstract type="html">This category adds methods to the UIKit framework&apos;s UIButton class. The methods in this category provide support for loading remote images and background images asynchronously from a URL.</Abstract>
			<DeclaredIn>UIButton+AFNetworking.h</DeclaredIn>
            
			
			<NodeRef refid="23"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setImageForState:withURL:</TokenIdentifier>
			<Abstract type="html">Asynchronously downloads an image from the specified URL, and sets it as the image for the specified state once the request is finished. Any previous image request for the receiver will be cancelled.</Abstract>
			<DeclaredIn>UIButton+AFNetworking.h</DeclaredIn>
			
			<Declaration>- (void)setImageForState:(UIControlState)state withURL:(NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state.</Abstract>
				</Parameter><Parameter>
					<Name>url</Name>
					<Abstract type="html">The URL used for the image request.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageForState:withURL:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setImageForState:withURL:placeholderImage:</TokenIdentifier>
			<Abstract type="html">Asynchronously downloads an image from the specified URL, and sets it as the image for the specified state once the request is finished. Any previous image request for the receiver will be cancelled.</Abstract>
			<DeclaredIn>UIButton+AFNetworking.h</DeclaredIn>
			
			<Declaration>- (void)setImageForState:(UIControlState)state withURL:(NSURL *)url placeholderImage:(UIImage *)placeholderImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state.</Abstract>
				</Parameter><Parameter>
					<Name>url</Name>
					<Abstract type="html">The URL used for the image request.</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes. If nil, the button will not change its image until the image request finishes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageForState:withURL:placeholderImage:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setImageForState:withURLRequest:placeholderImage:success:failure:</TokenIdentifier>
			<Abstract type="html">Asynchronously downloads an image from the specified URL request, and sets it as the image for the specified state once the request is finished. Any previous image request for the receiver will be cancelled.</Abstract>
			<DeclaredIn>UIButton+AFNetworking.h</DeclaredIn>
			
			<Declaration>- (void)setImageForState:(UIControlState)state withURLRequest:(NSURLRequest *)urlRequest placeholderImage:(UIImage *)placeholderImage success:(void ( ^ ) ( NSHTTPURLResponse *response , UIImage *image ))success failure:(void ( ^ ) ( NSError *error ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state.</Abstract>
				</Parameter><Parameter>
					<Name>urlRequest</Name>
					<Abstract type="html">The URL request used for the image request.</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes. If nil, the button will not change its image until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block to be executed when the image request operation finishes successfully. This block has no return value and takes two arguments: the server response and the image. If the image was returned from cache, the request and response parameters will be nil.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the image request operation finishes unsuccessfully, or that finishes successfully. This block has no return value and takes a single argument: the error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageForState:withURLRequest:placeholderImage:success:failure:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setBackgroundImageForState:withURL:</TokenIdentifier>
			<Abstract type="html">Asynchronously downloads an image from the specified URL, and sets it as the background image for the specified state once the request is finished. Any previous background image request for the receiver will be cancelled.</Abstract>
			<DeclaredIn>UIButton+AFNetworking.h</DeclaredIn>
			
			<Declaration>- (void)setBackgroundImageForState:(UIControlState)state withURL:(NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state.</Abstract>
				</Parameter><Parameter>
					<Name>url</Name>
					<Abstract type="html">The URL used for the background image request.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBackgroundImageForState:withURL:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setBackgroundImageForState:withURL:placeholderImage:</TokenIdentifier>
			<Abstract type="html">Asynchronously downloads an image from the specified URL, and sets it as the background image for the specified state once the request is finished. Any previous image request for the receiver will be cancelled.</Abstract>
			<DeclaredIn>UIButton+AFNetworking.h</DeclaredIn>
			
			<Declaration>- (void)setBackgroundImageForState:(UIControlState)state withURL:(NSURL *)url placeholderImage:(UIImage *)placeholderImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state.</Abstract>
				</Parameter><Parameter>
					<Name>url</Name>
					<Abstract type="html">The URL used for the background image request.</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">The background image to be set initially, until the background image request finishes. If nil, the button will not change its background image until the background image request finishes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBackgroundImageForState:withURL:placeholderImage:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setBackgroundImageForState:withURLRequest:placeholderImage:success:failure:</TokenIdentifier>
			<Abstract type="html">Asynchronously downloads an image from the specified URL request, and sets it as the image for the specified state once the request is finished. Any previous image request for the receiver will be cancelled.</Abstract>
			<DeclaredIn>UIButton+AFNetworking.h</DeclaredIn>
			
			<Declaration>- (void)setBackgroundImageForState:(UIControlState)state withURLRequest:(NSURLRequest *)urlRequest placeholderImage:(UIImage *)placeholderImage success:(void ( ^ ) ( NSHTTPURLResponse *response , UIImage *image ))success failure:(void ( ^ ) ( NSError *error ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state.</Abstract>
				</Parameter><Parameter>
					<Name>urlRequest</Name>
					<Abstract type="html">The URL request used for the image request.</Abstract>
				</Parameter><Parameter>
					<Name>placeholderImage</Name>
					<Abstract type="html">The background image to be set initially, until the background image request finishes. If nil, the button will not change its background image until the background image request finishes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBackgroundImageForState:withURLRequest:placeholderImage:success:failure:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/cancelImageRequestOperation</TokenIdentifier>
			<Abstract type="html">Cancels any executing image operation for the receiver, if one exists.</Abstract>
			<DeclaredIn>UIButton+AFNetworking.h</DeclaredIn>
			
			<Declaration>- (void)cancelImageRequestOperation</Declaration>
			
			
			<Anchor>//api/name/cancelImageRequestOperation</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/cancelBackgroundImageRequestOperation</TokenIdentifier>
			<Abstract type="html">Cancels any executing background image operation for the receiver, if one exists.</Abstract>
			<DeclaredIn>UIButton+AFNetworking.h</DeclaredIn>
			
			<Declaration>- (void)cancelBackgroundImageRequestOperation</Declaration>
			
			
			<Anchor>//api/name/cancelBackgroundImageRequestOperation</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
        
	</File>
</Tokens>